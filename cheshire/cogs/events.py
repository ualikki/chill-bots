from disnake.ext import commands
from random import randint
from asyncio import sleep
from datetime import datetime
from basefuncs import punish_logs, create_user, update_users, create_guild, get_from_db

'''–í–∞–∂–Ω–æ–µ –∑–∞–º–µ—á–∞–Ω–∏–µ: –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –≤–µ—Ä–Ω—ë—Ç –æ—à–∏–±–∫—É, –ø–æ—Å–∫–æ–ª—å–∫—É —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å
–≤—ã—à–µ, –∏ —Å–ª–µ–¥—É–µ—Ç –ø–∏—Å–∞—Ç—å ..basefuncs. –û–¥–Ω–∞–∫–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ disnake.Bot.load_extension –æ–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∫ —á–∞—Å—Ç—å
–æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –∏–º–ø–æ—Ä—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ cheshire.py'''

import disnake


class Events(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.c = 0

    @commands.Cog.listener()
    async def on_member_join(self, member: disnake.Member):
        if create_user(member):  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—à–µ–¥—à–∏—Ö –≤–ø–µ—Ä–≤—ã–µ
            emb = disnake.Embed(title='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', description=f'{member.name}, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!')
            emb.set_footer(text=f'–¢–µ–ø–µ—Ä—å –Ω–∞—Å {member.guild.member_count}')
            await self.bot.get_channel(983432883714789479).send(embed=emb)

    @commands.Cog.listener()
    async def on_ready(self):
        await sleep(2)  # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ–≤–∞–ª–∞ –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è
        for guild in self.bot.guilds:
            create_guild(guild)
            for user in guild.members:
                create_user(user)

    @commands.Cog.listener()
    async def on_message(self, message: disnake.Message):
        self.c += 1
        if not message.author.bot:
            update_users(message.author, money=randint(
                *(get_from_db('guilds', 'id', message.guild.id, 'min_payment', 'max_payment')[0])))
        if not self.c % 5:
            await self.update_color_roles()

    @commands.Cog.listener()
    async def on_reaction_add(self, reaction: disnake.Reaction, user):
        if reaction.emoji == 'üö´':
            if reaction.count >= 5:
                msg = reaction.message
                if msg.author.guild_permissions.administrator or msg.author.bot:
                    return
                emb = disnake.Embed(title='–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ')
                emb.add_field('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:', msg.content)
                emb.add_field('–ê–≤—Ç–æ—Ä:', msg.author)
                emb.add_field('–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ:',
                              '\n'.join(str(i) for i in await reaction.users().flatten()))
                await punish_logs(emb=emb)
                await msg.delete()

    @commands.Cog.listener()
    async def on_slash_command_error(self, inter: disnake.Interaction, error):
        if isinstance(error, commands.CommandOnCooldown):
            await inter.response.send_message(f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {round(error.retry_after, 2)} —Å–µ–∫.')
        else:
            await inter.response.send_message('–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'
                                              ' (<@817312010000924732>), –ø—Ä–∏ —ç—Ç–æ–º –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –∏'
                                              ' –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏ '
                                              '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã)', ephemeral=True)
            print(error)
            with open('logs.txt', 'a', encoding='utf-8') as f:
                f.write(f'\n{str(datetime.now())}\n{str(error)}\n{str(inter.data)}\n')

    async def update_color_roles(self):
        pass


def setup(bot):
    bot.add_cog(Events(bot))
